# Generated by Django 3.0.7 on 2020-08-26 02:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='Email Address')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('last_login', models.DateTimeField(auto_now_add=True, verbose_name='Last Login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('first_name', models.CharField(default=None, max_length=30, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(default=None, max_length=30, null=True, verbose_name='Last Name')),
                ('org_name', models.CharField(default=None, max_length=30, null=True, verbose_name='Organization Name')),
                ('is_student', models.BooleanField(default=True)),
                ('is_organization', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('resume', models.FileField(default='sample_resume.pdf', upload_to='resumes', verbose_name='Resume')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='default.png', upload_to='profile_pics', verbose_name='Profile Picture')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('phone_number', models.CharField(default=None, help_text='Please enter in the following format: 9734568456', max_length=10, null=True, verbose_name='Phone Number')),
                ('primary_address', models.CharField(default=None, max_length=1000, null=True, verbose_name='Primary Address')),
                ('zip_code', models.CharField(default=None, max_length=1000, null=True, verbose_name='Zip Code')),
                ('city', models.CharField(default=None, max_length=1000, null=True, verbose_name='City')),
                ('state', models.CharField(choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('DC', 'District of Columbia')], default=None, max_length=1000, null=True, verbose_name='State')),
                ('website_link', models.CharField(default=None, max_length=1000, null=True, verbose_name='Website Link')),
                ('facebook_link', models.CharField(default=None, max_length=1000, null=True, verbose_name='Facebook Link')),
                ('linkedin_link', models.CharField(default=None, max_length=1000, null=True, verbose_name='LinkedIn Link')),
                ('twitter_link', models.CharField(default=None, max_length=1000, null=True, verbose_name='Twitter Link')),
                ('organization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Organization')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationBackground',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('size', models.IntegerField(default=None, null=True, verbose_name='Number of Individuals')),
                ('industry', models.CharField(choices=[('F0', 'Athletic Training'), ('F1', 'Biology'), ('F2', 'Chemistry'), ('F3', 'Phyics'), ('F4', 'Environmental Science'), ('F5', 'Exercise Sci/Kinesiology'), ('F6', 'Fisheries and Wildlife'), ('F7', 'Food Science'), ('F8', 'Forest Management'), ('F9', 'Marine Science'), ('F10', 'Nursing (RN/BSN)'), ('F11', 'Organic/Urban Farming'), ('F12', 'Pharmacy'), ('F13', 'Physicians Assistant'), ('F14', 'Pre - Dental'), ('F15', 'Pre - Medical'), ('F15', 'Pre - Veterinary Medicine'), ('L0', 'Apparel/Textile Design'), ('L1', 'Dance'), ('L2', 'Film/Broadcast'), ('L3', 'Fine/Studio Art'), ('L4', 'Graphic Design'), ('L5', 'Industrial Design'), ('L6', 'Interior Design'), ('L7', 'Landscape Architecture'), ('L8', 'Music'), ('L9', 'Theatre'), ('L10', 'Urban Planning'), ('L11', 'Video Game Design'), ('L12', 'Web Design/Digital Media'), ('A0', 'Arts Management'), ('A1', 'Education'), ('A2', 'Emergency Management'), ('A3', 'English/Writing'), ('A4', 'Equine Science/Mgmt'), ('A5', 'Family & Child Science'), ('A6', 'History'), ('A7', 'Journalism'), ('A8', 'Language Studies'), ('A9', 'Non-Profit Management'), ('A10', 'Parks and Recreation Management'), ('A11', 'Peace/Conflict Studies'), ('A12', 'Philosophy'), ('A13', 'Political Science'), ('A14', 'Psychology / Sociology'), ('A15', 'Sports Turf/Golf Mgmt'), ('A16', 'Women/Gender Studies'), ('I0', 'Aerospace Engineering'), ('I1', 'Astronomy / Physics'), ('I2', 'Aviation/Aeronautics'), ('I3', 'Biomedical Engineering'), ('I4', 'Chemical Engineering'), ('I5', 'Civil Engineering'), ('I6', 'Computer Science'), ('I7', 'Cyber Security'), ('I8', 'Electrical Engineering'), ('I9', 'Energy Science'), ('I10', 'Industrial Engineering'), ('I11', 'Industrial Technology'), ('I12', 'Materials Science'), ('I13', 'Mathematics'), ('I14', 'Mechanical Engineering'), ('R0', 'Accounting - General'), ('R1', 'Business - General'), ('R2', 'Construction Management'), ('R3', 'Data Science - Analytics'), ('R4', 'Economics (National + Global)'), ('R5', 'Finance'), ('R6', 'Hospitality Management'), ('R7', 'Human Resources Mgmt'), ('R8', 'Information Systems (MIS)'), ('R9', 'Insurance & Risk Mgmt'), ('R10', 'Marketing / Advertising'), ('R11', 'Public Health Administration'), ('R12', 'Sport Management'), ('R13', 'Supply Chain Mgmt (Logistics)')], default=None, max_length=1000, null=True, verbose_name='Industry')),
                ('type', models.CharField(choices=[('LLC', 'Limited Liability Company'), ('NPC', 'Non-Profit Corporation'), ('HSS', 'High School'), ('EDU', 'College or University'), ('SDS', 'School District'), ('TWN', 'City or Town'), ('OTH', 'Other')], default=None, max_length=1000, null=True, verbose_name='Organization Type')),
                ('organization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Organization')),
            ],
        ),
        migrations.CreateModel(
            name='InternCommonApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('q1', models.TextField(help_text='Max Length (1000 characters)', max_length=1000, verbose_name='Tell Us About a Situation Where You Took Initiative or Took on a Leadership Role.')),
                ('q2', models.TextField(help_text='Max Length (1000 characters)', max_length=1000, verbose_name='What’s the Best Team You’ve Ever Been a Part of, and Why?/What’s Your Ideal Team?')),
                ('q3', models.TextField(help_text='Max Length (1000 characters)', max_length=1000, verbose_name='Why Are You Interested in This Internship/Company/Industry, and What Skills or Experiences Do You Hope to Gain?')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('phone_number', models.CharField(default=None, help_text='Please enter in the following format: 9734568456', max_length=10, null=True, verbose_name='Phone Number')),
                ('date_of_birth', models.CharField(default=None, help_text='Please enter in the following format: MM/DD/YYY', max_length=10, null=True, verbose_name='Date of Birth')),
                ('primary_address', models.CharField(default=None, max_length=1000, null=True, verbose_name='Primary Address')),
                ('zip_code', models.CharField(default=None, max_length=1000, null=True, verbose_name='Zip Code')),
                ('city', models.CharField(default=None, max_length=1000, null=True, verbose_name='City')),
                ('state', models.CharField(choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('DC', 'District of Columbia')], default=None, max_length=1000, null=True, verbose_name='State')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='Background',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('P', 'Prefer Not To Say')], default=None, max_length=1000, null=True, verbose_name='Gender')),
                ('sexual_orientation', models.CharField(choices=[('HO', 'Heterosexual'), ('HE', 'Homosexual'), ('BI', 'Bisexual'), ('AS', 'Asexual'), ('NB', 'Non-Binary'), ('P', 'Prefer Not To Say')], default=None, max_length=1000, null=True, verbose_name='Sexual Orientation')),
                ('race', models.CharField(choices=[('R0', 'American Indian or Alaska Native'), ('R1', 'Asian'), ('R2', 'Black or African American'), ('R3', 'Hispanic or Latino'), ('R4', 'Native Hawaiian or Other Pacific Islander'), ('R5', 'White')], default=None, max_length=1000, null=True, verbose_name='Race')),
                ('citizenship', models.CharField(choices=[('C0', 'U.S. Citizen'), ('P', 'Prefer Not To Say')], default=None, max_length=1000, null=True, verbose_name='Citizenship')),
                ('household_size', models.CharField(choices=[('HS0', 'Small (Less than 3)'), ('HS1', 'Midsize (3-5)'), ('HS2', 'Large (Over 5)'), ('HS3', 'X-Large (Over 10)')], default=None, max_length=1000, null=True, verbose_name='Household Size')),
                ('household_income', models.CharField(choices=[('HI0', 'Less than $10,000'), ('HI1', 'Between $10,000 - $25,000'), ('HI2', 'Between $25,000 - $50,000'), ('HI3', 'Between $50,000 - $100,000'), ('HI4', 'Between $100,000 - $150,000'), ('HI5', 'Between $150,000 - $200,000'), ('HI6', 'Over $200,000')], default=None, max_length=1000, null=True, verbose_name='Household Income')),
                ('first_gen', models.BooleanField(null=True, verbose_name='Are you the first in your family to go to college?')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='Academic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('college', models.CharField(default='', max_length=1000, null=True, verbose_name='Current or Preferred College/University')),
                ('current_grade_level', models.CharField(choices=[('L0', 'Middle School (7, 8 Grades)'), ('L1', 'Grade 9 High School'), ('L2', 'Grade 10 High School'), ('L3', 'Grade 11 High School'), ('L4', 'Grade 12 High School'), ('L5', 'First Year Undergraduate'), ('L6', 'Second Year Undergraduate'), ('L7', 'Third Year Undergraduate'), ('L8', 'Fourth Year Undergraduate'), ('L9', 'Five Year or More Undergraduate'), ('L10', 'Graduate Student'), ('L11', 'Vocational Education')], default=None, max_length=1000, null=True, verbose_name='Current Grade Level')),
                ('degree_in_pursuit', models.CharField(choices=[('L0', 'High School Diploma (or Equivalent)'), ('L1', 'Associate Degree'), ('L2', "Bachelor's Degree"), ('L3', "Master's Degree"), ('L4', 'Doctoral Degree')], default=None, max_length=1000, null=True, verbose_name='Degree You Are Currently Pursuing')),
                ('field', models.CharField(choices=[('F0', 'Athletic Training'), ('F1', 'Biology'), ('F2', 'Chemistry'), ('F3', 'Phyics'), ('F4', 'Environmental Science'), ('F5', 'Exercise Sci/Kinesiology'), ('F6', 'Fisheries and Wildlife'), ('F7', 'Food Science'), ('F8', 'Forest Management'), ('F9', 'Marine Science'), ('F10', 'Nursing (RN/BSN)'), ('F11', 'Organic/Urban Farming'), ('F12', 'Pharmacy'), ('F13', 'Physicians Assistant'), ('F14', 'Pre - Dental'), ('F15', 'Pre - Medical'), ('F15', 'Pre - Veterinary Medicine'), ('L0', 'Apparel/Textile Design'), ('L1', 'Dance'), ('L2', 'Film/Broadcast'), ('L3', 'Fine/Studio Art'), ('L4', 'Graphic Design'), ('L5', 'Industrial Design'), ('L6', 'Interior Design'), ('L7', 'Landscape Architecture'), ('L8', 'Music'), ('L9', 'Theatre'), ('L10', 'Urban Planning'), ('L11', 'Video Game Design'), ('L12', 'Web Design/Digital Media'), ('A0', 'Arts Management'), ('A1', 'Education'), ('A2', 'Emergency Management'), ('A3', 'English/Writing'), ('A4', 'Equine Science/Mgmt'), ('A5', 'Family & Child Science'), ('A6', 'History'), ('A7', 'Journalism'), ('A8', 'Language Studies'), ('A9', 'Non-Profit Management'), ('A10', 'Parks and Recreation Management'), ('A11', 'Peace/Conflict Studies'), ('A12', 'Philosophy'), ('A13', 'Political Science'), ('A14', 'Psychology / Sociology'), ('A15', 'Sports Turf/Golf Mgmt'), ('A16', 'Women/Gender Studies'), ('I0', 'Aerospace Engineering'), ('I1', 'Astronomy / Physics'), ('I2', 'Aviation/Aeronautics'), ('I3', 'Biomedical Engineering'), ('I4', 'Chemical Engineering'), ('I5', 'Civil Engineering'), ('I6', 'Computer Science'), ('I7', 'Cyber Security'), ('I8', 'Electrical Engineering'), ('I9', 'Energy Science'), ('I10', 'Industrial Engineering'), ('I11', 'Industrial Technology'), ('I12', 'Materials Science'), ('I13', 'Mathematics'), ('I14', 'Mechanical Engineering'), ('R0', 'Accounting - General'), ('R1', 'Business - General'), ('R2', 'Construction Management'), ('R3', 'Data Science - Analytics'), ('R4', 'Economics (National + Global)'), ('R5', 'Finance'), ('R6', 'Hospitality Management'), ('R7', 'Human Resources Mgmt'), ('R8', 'Information Systems (MIS)'), ('R9', 'Insurance & Risk Mgmt'), ('R10', 'Marketing / Advertising'), ('R11', 'Public Health Administration'), ('R12', 'Sport Management'), ('R13', 'Supply Chain Mgmt (Logistics)')], default=None, max_length=1000, null=True, verbose_name='Current Major or Field')),
                ('sat_score', models.IntegerField(default=None, null=True, verbose_name='SAT Score')),
                ('act_score', models.IntegerField(default=None, null=True, verbose_name='ACT Score')),
                ('gpa', models.FloatField(default=None, null=True, verbose_name='GPA')),
                ('expected_grad_year', models.CharField(choices=[('1990', '1990'), ('1991', '1991'), ('1992', '1992'), ('1993', '1993'), ('1994', '1994'), ('1995', '1995'), ('1996', '1996'), ('1997', '1997'), ('1998', '1998'), ('1999', '1999'), ('2000', '2000'), ('2001', '2001'), ('2002', '2002'), ('2003', '2003'), ('2004', '2004'), ('2005', '2005'), ('2006', '2006'), ('2007', '2007'), ('2008', '2008'), ('2009', '2009'), ('2010', '2010'), ('2011', '2011'), ('2012', '2012'), ('2013', '2013'), ('2014', '2014'), ('2015', '2015'), ('2016', '2016'), ('2017', '2017'), ('2018', '2018'), ('2019', '2019'), ('2020', '2020'), ('2021', '2021'), ('2022', '2022'), ('2023', '2023'), ('2024', '2024'), ('2025', '2025'), ('2026', '2026'), ('2027', '2027'), ('2028', '2028'), ('2029', '2029'), ('2030', '2030'), ('2031', '2031'), ('2032', '2032'), ('2033', '2033'), ('2034', '2034'), ('2035', '2035'), ('2036', '2036'), ('2037', '2037'), ('2038', '2038'), ('2039', '2039'), ('2040', '2040')], default=None, max_length=1000, null=True, verbose_name='Expected Graudation Year')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
        ),
    ]
